<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yb.dao.SysUserMapper">
  <resultMap id="BaseResultMap" type="com.yb.pojo.SysUser">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="creat_user_id" jdbcType="INTEGER" property="creatUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="flage" jdbcType="INTEGER" property="flage" />
  </resultMap>
  <sql id="Base_Column_List">
    stu_id, stu_name, password, email, mobile, status, creat_user_id, create_time, stu_number,
    class_id, flage
  </sql>

  <insert id="addUser" parameterType="com.yb.pojo.SysUser">
    insert into sys_user (id, name, password,
      email, mobile, status,
      creat_user_id, create_time, number,
      class_id, flage)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{status,jdbcType=BIT},
      #{creatUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{number,jdbcType=INTEGER},
      #{classId,jdbcType=INTEGER}, #{flage,jdbcType=BIT})
  </insert>

  <select id="selectByUserNumber" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select * from sys_user where number=#{number,jdbcType=INTEGER}
  </select>
<insert id="addRolers" parameterType="java.util.ArrayList">
  insert into sys_user_role(role_id,user_id)
  values
  <foreach collection="keys" index="role_id" item="id" open="" separator="," close="">
    (#{role_id,jdbcType=INTEGER},#{id,jdbcType=INTEGER})
  </foreach>
</insert>






  <sql id="_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By__Where_Clause">
    <where>
      <foreach collection=".oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <select id="selectBy" parameterType="com.yb.pojo.SysUser" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_stu
    <if test="_parameter != null">
      <include refid="_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteBy" parameterType="com.yb.pojo.SysUser">
    delete from sys_stu
    <if test="_parameter != null">
      <include refid="_Where_Clause" />
    </if>
  </delete>

  <insert id="insertSelective" parameterType="com.yb.pojo.SysUser">
    insert into sys_stu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="stuName != null">
        stu_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="creatUserId != null">
        creat_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="stuNumber != null">
        stu_number,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="flage != null">
        flage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="stuName != null">
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="creatUserId != null">
        #{creatUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stuNumber != null">
        #{stuNumber,jdbcType=INTEGER},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="flage != null">
        #{flage,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countBy" parameterType="com.yb.pojo.SysUser" resultType="java.lang.Long">
    select count(*) from sys_stu
    <if test="_parameter != null">
      <include refid="_Where_Clause" />
    </if>
  </select>
  <update id="updateBySelective" parameterType="map">
    update sys_stu
    <set>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=INTEGER},
      </if>
      <if test="record.stuName != null">
        stu_name = #{record.stuName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.creatUserId != null">
        creat_user_id = #{record.creatUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stuNumber != null">
        stu_number = #{record.stuNumber,jdbcType=INTEGER},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.flage != null">
        flage = #{record.flage,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By__Where_Clause" />
    </if>
  </update>
  <update id="updateBy" parameterType="map">
    update sys_stu
    set stu_id = #{record.stuId,jdbcType=INTEGER},
      stu_name = #{record.stuName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIT},
      creat_user_id = #{record.creatUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      stu_number = #{record.stuNumber,jdbcType=INTEGER},
      class_id = #{record.classId,jdbcType=INTEGER},
      flage = #{record.flage,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By__Where_Clause" />
    </if>
  </update>

</mapper>